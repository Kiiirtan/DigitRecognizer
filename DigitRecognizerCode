{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.12","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":3004,"databundleVersionId":861823,"sourceType":"competition"}],"dockerImageVersionId":30918,"isInternetEnabled":false,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\nimport tensorflow as tf\nfrom tensorflow import keras\nfrom tensorflow.keras import layers\nfrom sklearn.model_selection import train_test_split\n# Input data files are available in the read-only \"../input/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","trusted":true,"execution":{"iopub.status.busy":"2025-04-01T17:28:51.292254Z","iopub.execute_input":"2025-04-01T17:28:51.292686Z","iopub.status.idle":"2025-04-01T17:29:09.423993Z","shell.execute_reply.started":"2025-04-01T17:28:51.292654Z","shell.execute_reply":"2025-04-01T17:29:09.422755Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"train_data = pd.read_csv(\"/kaggle/input/digit-recognizer/train.csv\")\ntest_data = pd.read_csv(\"/kaggle/input/digit-recognizer/test.csv\")","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-01T17:29:30.567640Z","iopub.execute_input":"2025-04-01T17:29:30.567967Z","iopub.status.idle":"2025-04-01T17:29:34.200080Z","shell.execute_reply.started":"2025-04-01T17:29:30.567942Z","shell.execute_reply":"2025-04-01T17:29:34.199098Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"train_data.head()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-01T17:29:36.621940Z","iopub.execute_input":"2025-04-01T17:29:36.622361Z","iopub.status.idle":"2025-04-01T17:29:36.657092Z","shell.execute_reply.started":"2025-04-01T17:29:36.622325Z","shell.execute_reply":"2025-04-01T17:29:36.656049Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"test_data.head()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-01T17:29:41.301887Z","iopub.execute_input":"2025-04-01T17:29:41.302265Z","iopub.status.idle":"2025-04-01T17:29:41.317563Z","shell.execute_reply.started":"2025-04-01T17:29:41.302222Z","shell.execute_reply":"2025-04-01T17:29:41.316376Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"X = train_data.drop(\"label\", axis=1).values / 255.0 \nY = train_data[\"label\"].values\nX_test = test_data.values / 255.0  \nX = X.reshape(-1, 28, 28, 1)\nX_test = X_test.reshape(-1, 28, 28, 1)\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-01T17:30:28.362441Z","iopub.execute_input":"2025-04-01T17:30:28.362774Z","iopub.status.idle":"2025-04-01T17:30:28.707594Z","shell.execute_reply.started":"2025-04-01T17:30:28.362748Z","shell.execute_reply":"2025-04-01T17:30:28.706633Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"Y = keras.utils.to_categorical(Y, num_classes=10)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-01T17:30:31.862267Z","iopub.execute_input":"2025-04-01T17:30:31.862671Z","iopub.status.idle":"2025-04-01T17:30:31.868498Z","shell.execute_reply.started":"2025-04-01T17:30:31.862642Z","shell.execute_reply":"2025-04-01T17:30:31.867412Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"X_train, X_valid, Y_train, Y_valid = train_test_split(X, Y, test_size=0.1, random_state=42)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-01T17:30:58.167016Z","iopub.execute_input":"2025-04-01T17:30:58.167420Z","iopub.status.idle":"2025-04-01T17:30:58.622881Z","shell.execute_reply.started":"2025-04-01T17:30:58.167385Z","shell.execute_reply":"2025-04-01T17:30:58.621459Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"model = keras.Sequential([\n    layers.Conv2D(32, (3,3), activation='relu', input_shape=(28,28,1)),\n    layers.MaxPooling2D((2,2)),\n    layers.Conv2D(64, (3,3), activation='relu'),\n    layers.MaxPooling2D((2,2)),\n    layers.Conv2D(128, (3,3), activation='relu'),\n    layers.Flatten(),\n    layers.Dense(128, activation='relu'),\n    layers.Dense(10, activation='softmax')\n])","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-01T17:31:20.602136Z","iopub.execute_input":"2025-04-01T17:31:20.602531Z","iopub.status.idle":"2025-04-01T17:31:20.734189Z","shell.execute_reply.started":"2025-04-01T17:31:20.602500Z","shell.execute_reply":"2025-04-01T17:31:20.732941Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"model.compile(optimizer='adam', loss='categorical_crossentropy', metrics=['accuracy'])","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-01T17:31:36.027596Z","iopub.execute_input":"2025-04-01T17:31:36.027977Z","iopub.status.idle":"2025-04-01T17:31:36.043865Z","shell.execute_reply.started":"2025-04-01T17:31:36.027945Z","shell.execute_reply":"2025-04-01T17:31:36.042651Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"fitting = model.fit(X_train, Y_train, epochs=10, batch_size=64, validation_data=(X_valid, Y_valid))\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-01T17:32:08.082152Z","iopub.execute_input":"2025-04-01T17:32:08.082555Z","iopub.status.idle":"2025-04-01T17:35:18.677546Z","shell.execute_reply.started":"2025-04-01T17:32:08.082524Z","shell.execute_reply":"2025-04-01T17:35:18.676388Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"predictions = model.predict(X_test)\npred_answer = np.argmax(predictions, axis=1)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-01T17:35:22.744156Z","iopub.execute_input":"2025-04-01T17:35:22.744585Z","iopub.status.idle":"2025-04-01T17:35:29.169886Z","shell.execute_reply.started":"2025-04-01T17:35:22.744552Z","shell.execute_reply":"2025-04-01T17:35:29.168956Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"submission = pd.DataFrame({\"ImageId\": np.arange(1, len(pred_answer) + 1), \"Label\": pred_answer})\nsubmission.to_csv(\"submission.csv\", index=False)\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-01T17:35:37.682606Z","iopub.execute_input":"2025-04-01T17:35:37.682961Z","iopub.status.idle":"2025-04-01T17:35:37.722216Z","shell.execute_reply.started":"2025-04-01T17:35:37.682913Z","shell.execute_reply":"2025-04-01T17:35:37.721078Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"","metadata":{"trusted":true},"outputs":[],"execution_count":null}]}